https://velog.io/@yyong3519/API-아임포트
---------------------------
pom.xml
<!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
<dependency>
    <groupId>org.apache.httpcomponents</groupId>
    <artifactId>httpclient</artifactId>
    <version>4.5.13</version>
</dependency>
------------------------------------
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javax.inject.Inject;
import javax.servlet.http.HttpSession;

import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.HttpClientBuilder;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.util.EntityUtils;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.itwillbs.domain.MemberDTO;
import com.itwillbs.service.MemberService;
------------------------------------------
	public static List<NameValuePair> convertParameter(Map<String,String> paramMap){
        List<NameValuePair> paramList = new ArrayList<NameValuePair>();
        Set<Map.Entry<String,String>> entries = paramMap.entrySet();
        for(Map.Entry<String,String> entry : entries) {
            paramList.add(new BasicNameValuePair(entry.getKey(), entry.getValue()));
        } return paramList;
    }
-----------------------------------------

	@RequestMapping(value = "/test/test2", method = RequestMethod.GET)
	public String test2() {
		
		 String IMPORT_TOKEN_URL = "https://api.iamport.kr/users/getToken";
		  String IMPORT_CANCEL_URL = "https://api.iamport.kr/payments/cancel";
		  String KEY = "3277120266459676";
		  String SECRET = "1DrQxlMwGqNfi2Efjf53cfPy17T4SIyUm0KTlxp2YdhhgWwzcBDpRsXTzRXszwnVw8PSFeUEscVI9ril";
		    
		    String result = "";
	        HttpClient client = HttpClientBuilder.create().build();
	        HttpPost post = new HttpPost(IMPORT_TOKEN_URL);
	        Map<String,String> m =new HashMap<String,String>();
	        m.put("imp_key", KEY);
	        m.put("imp_secret", SECRET);
	        try {
	            post.setEntity(new UrlEncodedFormEntity(convertParameter(m)));
	            HttpResponse res = client.execute(post);
	            ObjectMapper mapper = new ObjectMapper();
	            String body = EntityUtils.toString(res.getEntity());
	            JsonNode rootNode = mapper.readTree(body);
	            JsonNode resNode = rootNode.get("response");
	            result = resNode.get("access_token").asText();
	            System.out.println(result);
	        } catch (Exception e){
//	            throw new IamportException("아임포트 토큰을 받아올 수 없습니다.");
	           e.printStackTrace();
	        }
	        
		
		// /WEB-INF/views/test/test2.jsp
		return "test/test2";
	}

